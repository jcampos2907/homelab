# Unbound for Pi-hole namespace â€” DoT forwarder (Cloudflare + CleanBrowsing)
# - Uses mvance/unbound image with our own unbound.conf (no chroot) and DoT forwarders
# - No hostPort; exposes ClusterIP :5335 for Pi-hole upstream
# - Includes optional A-records/SRV files you can extend
# Apply: kubectl apply -f this-file.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unbound-main-conf
  namespace: pihole
  labels:
    app.kubernetes.io/name: unbound
    app.kubernetes.io/part-of: pihole-dns
data:
  unbound.conf: |
    server:
      chroot: ""
      directory: "/opt/unbound/etc/unbound"
      auto-trust-anchor-file: "/opt/unbound/etc/unbound/root.key"
      # (temporarily) avoid privilege drop complexity
      username: "root"
      # If no logfile is specified, syslog is used
      # logfile: "/var/log/unbound/unbound.log"
      verbosity: 0

      interface: 0.0.0.0
      port: 5335
      do-ip4: yes
      do-udp: yes
      do-tcp: yes

      # May be set to no if you don't have IPv6 connectivity
      do-ip6: yes

      # You want to leave this to no unless you have *native* IPv6. With 6to4 and
      # Terredo tunnels your web browser should favor IPv4 for the same reasons
      prefer-ip6: no

      # Allow your cluster (adjust to your pod/service CIDRs if different)
      access-control: 10.0.0.0/8 allow
      access-control: 172.16.0.0/12 allow
      access-control: 192.168.0.0/16 allow
      access-control: 127.0.0.0/8 allow
      access-control: ::1 allow

      # Use this only when you downloaded the list of primary root servers!
      # If you use the default dns-root-data package, unbound will find it automatically
      #root-hints: "/var/lib/unbound/root.hints"

      # Trust glue only if it is within the server's authority
      harden-glue: yes

      # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes BOGUS
      harden-dnssec-stripped: yes

      # Don't use Capitalization randomization as it known to cause DNSSEC issues sometimes
      # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378 for further details
      use-caps-for-id: no

      # Reduce EDNS reassembly buffer size.
      # IP fragmentation is unreliable on the Internet today, and can cause
      # transmission failures when large DNS messages are sent via UDP. Even
      # when fragmentation does work, it may not be secure; it is theoretically
      # possible to spoof parts of a fragmented DNS message, without easy
      # detection at the receiving end. Recently, there was an excellent study
      # >>> Defragmenting DNS - Determining the optimal maximum UDP response size for DNS <<<
      # by Axel Koolhaas, and Tjeerd Slokker (https://indico.dns-oarc.net/event/36/contributions/776/)
      # in collaboration with NLnet Labs explored DNS using real world data from the
      # the RIPE Atlas probes and the researchers suggested different values for
      # IPv4 and IPv6 and in different scenarios. They advise that servers should
      # be configured to limit DNS messages sent over UDP to a size that will not
      # trigger fragmentation on typical network links. DNS servers can switch
      # from UDP to TCP when a DNS response is too big to fit in this limited
      # buffer size. This value has also been suggested in DNS Flag Day 2020.
      edns-buffer-size: 1232

      # Perform prefetching of close to expired message cache entries
      # This only applies to domains that have been frequently queried
      prefetch: yes

      # One thread should be sufficient, can be increased on beefy machines. In reality for most users running on small networks or on a single machine, it should be unnecessary to seek performance enhancement by increasing num-threads above 1.
      num-threads: 1

      # Ensure kernel buffer is large enough to not lose messages in traffic spikes
      so-rcvbuf: 1m

      # Ensure privacy of local IP ranges
      private-address: 192.168.0.0/16
      private-address: 169.254.0.0/16
      private-address: 172.16.0.0/12
      private-address: 10.0.0.0/8
      private-address: fd00::/8
      private-address: fe80::/10

      # Ensure no reverse queries to non-public IP ranges (RFC6303 4.2)
      private-address: 192.0.2.0/24
      private-address: 198.51.100.0/24
      private-address: 203.0.113.0/24
      private-address: 255.255.255.255/32
      private-address: 2001:db8::/32
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: unbound-a-records-conf
#   namespace: pihole
#   labels:
#     app.kubernetes.io/name: unbound
#     app.kubernetes.io/part-of: pihole-dns
# data:
#   a-records.conf: |
#     server:
#       # Example local zone, adjust or remove if not needed
#       private-domain: "famcr.lan"
#       domain-insecure: "famcr.lan"
#       local-zone: "famcr.lan" transparent

#       # Example A / PTR samples (commented)
#       # local-data: "k8s.famcr.lan. IN A 172.30.0.1"
#       # local-data-ptr: "172.30.0.1 k8s.famcr.lan."
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: unbound-forward-records-conf
#   namespace: pihole
#   labels:
#     app.kubernetes.io/name: unbound
#     app.kubernetes.io/part-of: pihole-dns
# data:
#   forward-records.conf: |
#     forward-zone:
#       name: "."
#       forward-tls-upstream: yes

#       # Cloudflare DoT
#       forward-addr: 1.1.1.1@853#cloudflare-dns.com
#       forward-addr: 1.0.0.1@853#cloudflare-dns.com
#       # IPv6 (optional)
#       # forward-addr: 2606:4700:4700::1111@853#cloudflare-dns.com
#       # forward-addr: 2606:4700:4700::1001@853#cloudflare-dns.com

#       # CleanBrowsing Security Filter (optional extra upstreams)
#       forward-addr: 185.228.168.9@853#security-filter-dns.cleanbrowsing.org
#       forward-addr: 185.228.169.9@853#security-filter-dns.cleanbrowsing.org
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: unbound-srv-records-conf
#   namespace: pihole
#   labels:
#     app.kubernetes.io/name: unbound
#     app.kubernetes.io/part-of: pihole-dns
# data:
#   srv-records.conf: |
#     # Example SRV records
#     # _service._proto.name. | TTL | class | SRV | priority | weight | port | target.
#     # _etcd-server-ssl._tcp.famcr.lan.  86400 IN SRV 0 10 2380 etcd-0.famcr.lan.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unbound
  namespace: pihole
  labels:
    app.kubernetes.io/name: unbound
    app.kubernetes.io/part-of: pihole-dns
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: unbound
  template:
    metadata:
      labels:
        app.kubernetes.io/name: unbound
        app.kubernetes.io/part-of: pihole-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: unbound
      initContainers:
      # - name: setup-anchor
      #   image: mvance/unbound:1.22.0
      #   command: ["sh","-c"]
      #   args: ["unbound-anchor -a /opt/unbound/etc/unbound/root.key || true"]
      #   volumeMounts:
      - name: setup-anchor
        image: mvance/unbound:1.22.0
        command: ["sh","-c"]
        args:
          - |
            set -eux
            mkdir -p /opt/unbound/etc/unbound/unbound.conf.d
            unbound-anchor -v -a /opt/unbound/etc/unbound/root.key
            test -s /opt/unbound/etc/unbound/root.key
            chmod 644 /opt/unbound/etc/unbound/root.key
            echo "Anchor created:"
            ls -l /opt/unbound/etc/unbound/root.key
        volumeMounts:
        - name: etc-unbound
          mountPath: /opt/unbound/etc/unbound
        - name: etc-unbound
          mountPath: /opt/unbound/etc/unbound
        securityContext:
          runAsUser: 0
      containers:
      - name: dns-unbound
        image: mvance/unbound:1.22.0
        imagePullPolicy: IfNotPresent
        command: ["sh","-c"]
        # args: ["unbound -d -c /opt/unbound/etc/unbound/unbound.conf"]
        args: ["unbound -dd -vv -c /opt/unbound/etc/unbound/unbound.conf.d/pi-hole.conf"]

        ports:
        - name: dns-tcp
          containerPort: 5335
          protocol: TCP
        - name: dns-udp
          containerPort: 5335
          protocol: UDP
        readinessProbe:
          tcpSocket:
            port: 5335
          periodSeconds: 5
          initialDelaySeconds: 5
        livenessProbe:
          tcpSocket:
            port: 5335
          periodSeconds: 10
          initialDelaySeconds: 10
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          runAsUser: 0
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        # - name: etc-unbound
        #   mountPath: /opt/unbound/etc/unbound
        - name: unbound-main-conf-volume
          mountPath: /opt/unbound/etc/unbound/unbound.conf.d/pi-hole.conf
          subPath: unbound.conf
          readOnly: true
        # - name: unbound-a-conf-volume
        #   mountPath: /opt/unbound/etc/unbound/a-records.conf
        #   subPath: a-records.conf
        #   readOnly: true
        # - name: unbound-forward-conf-volume
        #   mountPath: /opt/unbound/etc/unbound/forward-records.conf
        #   subPath: forward-records.conf
        #   readOnly: true
        # - name: unbound-srv-conf-volume
        #   mountPath: /opt/unbound/etc/unbound/srv-records.conf
        #   subPath: srv-records.conf
        #   readOnly: true
      dnsPolicy: ClusterFirst
      volumes:
      - name: etc-unbound
        emptyDir: {}
      - name: unbound-main-conf-volume
        configMap:
          name: unbound-main-conf
      - name: unbound-a-conf-volume
        configMap:
          name: unbound-a-records-conf
      - name: unbound-forward-conf-volume
        configMap:
          name: unbound-forward-records-conf
      - name: unbound-srv-conf-volume
        configMap:
          name: unbound-srv-records-conf
---
apiVersion: v1
kind: Service
metadata:
  name: unbound
  namespace: pihole
  labels:
    app.kubernetes.io/name: unbound
    app.kubernetes.io/part-of: pihole-dns
spec:
  type: ClusterIP
  ipFamilies: ["IPv4"]
  selector:
    app.kubernetes.io/name: unbound
  ports:
  - name: dns-tcp
    port: 5335
    targetPort: 5335
    protocol: TCP
  - name: dns-udp
    port: 5335
    targetPort: 5335
    protocol: UDP
