{{- /*
Standalone Deployment for ghcr.io/lovelaze/nebula-sync:latest.
Uses PRIMARY_FILE and REPLICAS_FILE, mounted from either:
- an existing Secret (nebulaSync.existingSecret), with keys: primary, replicas, or
- the Secret generated by nebula-sync-secret.yaml above.

Optional values supported:
nebulaSync:
  enabled: true
  image: ghcr.io/lovelaze/nebula-sync:latest
  replicas: 1
  imagePullPolicy: IfNotPresent
  existingSecret: ""          # if set, won't render our Secret; secret must contain keys primary, replicas
  password: ""                # only used to build the generated Secret (if no existingSecret)
  primary:
    port: 80                  # port for Pi-hole admin (constructs host:port in the Secret)
  # Optional behavior knobs:
  fullSync: true              # FULL_SYNC
  runGravity: true            # RUN_GRAVITY
  cron: "0 * * * *"           # CRON schedule
  timezone: "America/Costa_Rica" # TZ
  clientSkipTLSVerify: false  # CLIENT_SKIP_TLS_VERIFICATION
  clientRetryDelaySeconds: 1  # CLIENT_RETRY_DELAY_SECONDS
  clientTimeoutSeconds: 20    # CLIENT_TIMEOUT_SECONDS
  # Standard k8s knobs:
  nodeSelector: {}
  affinity: {}
  tolerations: []
  resources: {}
  livenessProbe: {}           # optional
  readinessProbe: {}          # optional
*/ -}}
{{- $neb := .Values.nebulaSync | default (dict) -}}
{{- if $neb.enabled | default true -}}
{{- $fullname := include "pihole.fullname" . -}}
{{- $secretName := default (printf "%s-nebula-sync" $fullname) $neb.existingSecret -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-nebula-sync" $fullname }}
  labels:
    app.kubernetes.io/name: nebula-sync
    app.kubernetes.io/part-of: {{ template "pihole.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
spec:
  replicas: {{ default 1 $neb.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: nebula-sync
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nebula-sync
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with $neb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $neb.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $neb.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: nebula-sync-secrets
          secret:
            secretName: {{ $secretName }}
            optional: false
      containers:
        - name: nebula-sync
          image: {{ default "ghcr.io/lovelaze/nebula-sync:latest" $neb.image }}
          imagePullPolicy: {{ default "IfNotPresent" $neb.imagePullPolicy }}
          env:
            # REQUIRED by nebula-sync: point to files containing "http://host:port|password" strings
            - name: PRIMARY_FILE
              value: /run/secrets/primary
            - name: REPLICAS_FILE
              value: /run/secrets/replicas

            # Optional feature flags / schedule
            {{- if hasKey $neb "fullSync" }}
            - name: FULL_SYNC
              value: {{ $neb.fullSync | toString | quote }}
            {{- end }}
            {{- if hasKey $neb "runGravity" }}
            - name: RUN_GRAVITY
              value: {{ $neb.runGravity | toString | quote }}
            {{- end }}
            {{- if $neb.cron }}
            - name: CRON
              value: {{ $neb.cron | quote }}
            {{- end }}
            {{- if $neb.timezone }}
            - name: TZ
              value: {{ $neb.timezone | quote }}
            {{- end }}

            # HTTP client knobs
            {{- if hasKey $neb "clientSkipTLSVerify" }}
            - name: CLIENT_SKIP_TLS_VERIFICATION
              value: {{ $neb.clientSkipTLSVerify | toString | quote }}
            {{- end }}
            {{- if hasKey $neb "clientRetryDelaySeconds" }}
            - name: CLIENT_RETRY_DELAY_SECONDS
              value: {{ $neb.clientRetryDelaySeconds | toString | quote }}
            {{- end }}
            {{- if hasKey $neb "clientTimeoutSeconds" }}
            - name: CLIENT_TIMEOUT_SECONDS
              value: {{ $neb.clientTimeoutSeconds | toString | quote }}
            {{- end }}

          volumeMounts:
            - name: nebula-sync-secrets
              mountPath: /run/secrets
              readOnly: true

          resources:
            {{- toYaml (default (dict) $neb.resources) | nindent 12 }}

          {{- with $neb.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $neb.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}
