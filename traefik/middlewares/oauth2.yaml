# ForwardAuth: check session via /oauth2/auth (returns 202 or 401)
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: auth-headers
  namespace: traefik
spec:
  headers:
      sslRedirect: false
      stsSeconds: 315360000
      browserXssFilter: true
      contentTypeNosniff: true
      forceSTSHeader: true
      sslHost: famcr.org
      stsIncludeSubdomains: true
      stsPreload: true
      frameDeny: true

---
# Errors: on 401, internally fetch /oauth2/sign_in from oauth2-proxy
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: oauth-auth-redirect
  namespace: traefik
spec:
  forwardAuth:
    address: http://oauth2-oauth2-proxy.oauth2.svc.cluster.local/
    trustForwardHeader: true
    authResponseHeaders:
      - X-Auth-Request-Access-Token
      - Authorization

---
# Chain them so errors wraps forwardAuth (order matters)
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: oauth-auth-wo-redirect
  namespace: traefik
spec:
  forwardAuth:
    address: http://oauth2-oauth2-proxy.oauth2.svc.cluster.local/oauth2/auth
    trustForwardHeader: true
    authResponseHeaders:
      - X-Auth-Request-Access-Token
      - Authorization
